// Code generated by mockery v1.1.0. DO NOT EDIT.

package mocks

import (
	cache "github.com/prashanthpai/sqlcache/cache"
	mock "github.com/stretchr/testify/mock"

	time "time"
	"context"
)

// Cacher is an autogenerated mock type for the Cacher type
type Cacher struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *Cacher) Get(ctx context.Context, key string) (*cache.Item, bool, error) {
	ret := _m.Called(key)

	var r0 *cache.Item
	if rf, ok := ret.Get(0).(func(string) *cache.Item); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cache.Item)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(key)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Set provides a mock function with given fields: key, item, ttl
func (_m *Cacher) Set(ctx context.Context, key string, item *cache.Item, ttl time.Duration) error {
	ret := _m.Called(key, item, ttl)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *cache.Item, time.Duration) error); ok {
		r0 = rf(key, item, ttl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
